{"version":3,"sources":["components/Input.jsx","components/buttons/Button.jsx","utils/fetchKit.js","components/forms/CreateUserForm.jsx","components/forms/LoginForm.jsx","pages/LoginPage.jsx","contexts/userContext.js","components/buttons/LogoutButton.jsx","components/Header.jsx","components/buttons/EditButton.jsx","components/forms/DeleteForm.jsx","components/buttons/SaveButton.jsx","components/forms/EditForm.jsx","components/TaskCard.jsx","components/forms/CreateForm.jsx","pages/HomePage.jsx","pages/ProtectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","formData","setFormData","name","defVal","placeHolder","type","onChange","e","inputName","target","inputValue","value","placeholder","defaultValue","required","Button","text","click","onClick","baseUrl","getToken","localStorage","getItem","FetchKit","CreateUserForm","setNewUser","setCreateUser","useState","exists","setExists","userName","password","handleOnSubmit","a","preventDefault","createUserFetch","ok","className","onSubmit","LoginForm","wrongCred","setWrongCred","history","useHistory","checkCredentials","loginFetch","data","json","token","setItem","push","LoginPage","createUser","newUser","useEffect","fetch","method","headers","body","JSON","stringify","getUserFetch","Authorization","verifyTokenAuth","getTasksFetch","editTasksFetch","id","deleteTaskFetch","createTasksFetch","UserContext","createContext","LogoutButton","setUser","useContext","clear","Header","user","EditButton","setEdit","DeleteForm","task","setCloseAll","getUserData","deleteOnSubmit","_id","SaveButton","EditForm","edit","editOnSubmit","description","TaskCard","closeAll","visible","setVisible","showEdit","date","CreateForm","createOnSubmit","HomePage","tasks","map","key","stroke","ProtectedRoute","component","decode","validateToken","to","pathname","App","res","Provider","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fc28d67.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Input({formData, setFormData, name, defVal, placeHolder, type}) {\r\n    \r\n    const handleOnChange = (e)=>{\r\n        const inputName = e.target.name; \r\n        const inputValue = e.target.value; \r\n        setFormData({...formData, [inputName]:inputValue})\r\n    }\r\n\r\n    return (\r\n        <input \r\n            type={type} \r\n            onChange={handleOnChange}\r\n            placeholder={placeHolder} \r\n            name={name} \r\n            defaultValue ={defVal}\r\n            required\r\n        />\r\n        )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Button({text, click}) {\r\n\r\n    return (\r\n        <button onClick={click}>\r\n            {text}\r\n        </button>\r\n    )    \r\n}\r\n","const baseUrl = \"https://todokev.herokuapp.com/\"\r\nconst getToken = () => localStorage.getItem(\"token\")\r\n\r\nexport default class FetchKit{\r\n\r\n    static loginFetch = (formData) => \r\n        fetch(`${baseUrl}/user/login`, {\r\n            method: 'POST', \r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            }, \r\n            body: JSON.stringify(formData)\r\n      })\r\n    static createUserFetch = (formData) => \r\n        fetch(`${baseUrl}/user`, {\r\n            method: 'POST', \r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            }, \r\n            body: JSON.stringify(formData)\r\n      })\r\n\r\n    static getUserFetch = () => \r\n      fetch(`${baseUrl}/user`, {\r\n        method: \"GET\", \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${getToken()}`,\r\n      }\r\n    })\r\n\r\n    static verifyTokenAuth = (token) =>\r\n      fetch(`${baseUrl}/auth`, {\r\n        method: \"GET\", \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${token}`\r\n        },\r\n    })\r\n\r\n    static getTasksFetch = () => \r\n      fetch(`${baseUrl}/task`, {\r\n        method: \"GET\", \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${getToken()}`,\r\n      }\r\n    })\r\n    \r\n    static editTasksFetch = (formData, id) => \r\n      fetch(`${baseUrl}/task/${id}`, {\r\n        method: \"PUT\", \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${getToken()}`,\r\n      },\r\n      body: JSON.stringify(formData)\r\n\r\n    })\r\n    static deleteTaskFetch = (id) => \r\n      fetch(`${baseUrl}/task/${id}`, {\r\n        method: \"Delete\", \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${getToken()}`,\r\n      },\r\n\r\n    })\r\n    static createTasksFetch = (formData) => \r\n      fetch(`${baseUrl}/task`, {\r\n        method: \"POST\", \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${getToken()}`,\r\n      },\r\n      body: JSON.stringify(formData)\r\n\r\n    })\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport Input from '../Input'\r\nimport Button from '../buttons/Button'\r\nimport FetchKit from '../../utils/fetchKit'\r\nexport default function CreateUserForm({setNewUser, setCreateUser}) {\r\n\r\n    const [exists, setExists] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        userName: \"\", \r\n        password: \"\"\r\n    },)\r\n\r\n    const handleOnSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        const res = await FetchKit.createUserFetch(formData)\r\n        if(res.ok){\r\n            setCreateUser(false)\r\n            setNewUser(true)\r\n        }\r\n        else  setExists(true)\r\n    \r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"inputForm\" onSubmit={handleOnSubmit}>\r\n                <Input \r\n                    formData={formData} \r\n                    setFormData={setFormData} \r\n                    name=\"userName\" \r\n                    placeHolder={\"new username\"}\r\n                />\r\n                <Input \r\n                    formData={formData} \r\n                    setFormData={setFormData} \r\n                    name=\"password\" \r\n                    placeHolder={\"new password\"} \r\n                    type={\"password\"}\r\n                />\r\n                <Button text={\"signup\"}/>\r\n            </form>\r\n            {exists && <p>Username is taken</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport FetchKit from '../../utils/fetchKit'\r\nimport Input from '../Input'\r\nimport { useHistory } from 'react-router'\r\nimport Button from '../buttons/Button'\r\n\r\nexport default function LoginForm({setNewUser, setCreateUser}) {\r\n    \r\n    const [wrongCred, setWrongCred] = useState(false)\r\n    const history = useHistory()\r\n    const [formData, setFormData] = useState({\r\n        userName: \"\", \r\n        password: \"\"\r\n    },)\r\n\r\n    const checkCredentials = async (e) =>{\r\n        e.preventDefault() \r\n        setCreateUser(false)\r\n        setNewUser(false)\r\n\r\n        const data = await FetchKit.loginFetch(formData)\r\n        const token = await data.json()\r\n        \r\n        if(data.ok){ \r\n            localStorage.setItem(\"token\", token)\r\n            history.push(\"/home\")\r\n        }\r\n        else setWrongCred(true)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {wrongCred && <p>WRONG PASSWORD OR EMAIL</p>}\r\n            <form className=\"inputForm\" onSubmit={checkCredentials}>\r\n                <Input formData={formData} \r\n                    setFormData={setFormData} \r\n                    name=\"userName\" \r\n                    placeHolder={\"username\"}\r\n                />\r\n                <Input \r\n                    formData={formData} \r\n                    setFormData={setFormData} \r\n                    name=\"password\" \r\n                    placeHolder={\"password\"}\r\n                    type={\"password\"}\r\n                />\r\n                <Button text={\"login\"}/>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport CreateUserForm from '../components/forms/CreateUserForm'\r\nimport LoginForm from '../components/forms/LoginForm'\r\n\r\nexport default function LoginPage() {\r\n\r\n    const token = localStorage.getItem(\"token\")\r\n    const history = useHistory()\r\n    const [createUser, setCreateUser] = useState(false)\r\n    const [newUser, setNewUser] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        if(token) history.push(\"/home\")\r\n    }, [token,history, createUser ])\r\n\r\n    const handleOnClick = () =>{\r\n        setCreateUser(!createUser)\r\n        setNewUser(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            {newUser&& \"Ny användare registrerad!\"}\r\n            {!createUser? \r\n                <LoginForm \r\n                    setNewUser={setNewUser} \r\n                    setCreateUser={setCreateUser}\r\n                />\r\n                :<CreateUserForm \r\n                    setNewUser={setNewUser}\r\n                    setCreateUser={setCreateUser}\r\n                />\r\n            } \r\n            <p className=\"create-text\" onClick={handleOnClick}>\r\n            {!createUser?\"create user\":\"back to login\"}</p>\r\n        </div>\r\n    )\r\n}\r\n","import {createContext} from 'react'\r\n\r\nexport const UserContext = createContext()","import React, {useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { UserContext } from '../../contexts/userContext'\r\n\r\nexport default function LogoutButton() {\r\n    const {setUser} = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n    const logOutOnClick = ()=>{\r\n        localStorage.clear();\r\n        setUser()\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <button  className=\"logout\"onClick={logOutOnClick}>\r\n            logout\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport LogoutButton from './buttons/LogoutButton'\r\n\r\n\r\nexport default function Header({user}) {    \r\n\r\n    return (\r\n        <div className={\"header\"}>\r\n            <h1>TODOODODO</h1> \r\n            <div className={\"user\"}>\r\n                <p>Welcome {user.user}</p>\r\n                <LogoutButton/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function EditButton({setEdit}) {\r\n    \r\n    return (\r\n        <button  className=\"logout\" onClick={setEdit}>\r\n            edit\r\n        </button>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport FetchKit from '../../utils/fetchKit'\r\nimport { UserContext } from '../../contexts/userContext'\r\nimport Button from '../buttons/Button'\r\n\r\nexport default function DeleteForm({task, setCloseAll}) {\r\n    const {getUserData} = useContext(UserContext)\r\n\r\n    \r\n    const deleteOnSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        const deletTask = await FetchKit.deleteTaskFetch(task._id)\r\n        if(deletTask.ok){\r\n            setCloseAll(true)\r\n            getUserData()\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={deleteOnSubmit}>\r\n            <Button text={\"delete\"}/>\r\n        </form>\r\n\r\n        )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SaveButton() {\r\n    return (\r\n        <button  className=\"logout\">\r\n            save changes\r\n        </button>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport FetchKit from '../../utils/fetchKit'\r\nimport Input from '../Input'\r\nimport { UserContext } from '../../contexts/userContext'\r\nimport SaveButton from '../buttons/SaveButton'\r\n\r\n\r\n\r\nexport default function EditForm({task, setEdit, edit}) {\r\n    \r\n    const {getUserData} = useContext(UserContext)\r\n    const [formData, setFormData] = useState({\r\n        userName: \"\", \r\n        password: \"\"\r\n    })\r\n    \r\n    const editOnSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        const editTask = await FetchKit.editTasksFetch(formData, task._id)\r\n        if(editTask.ok){\r\n            setEdit(!edit)\r\n            getUserData()\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form className={\"editform\"}onSubmit={editOnSubmit}>\r\n            <div className={\"inputfield\"}>\r\n                <Input formData={formData} \r\n                    setFormData={setFormData} \r\n                    name=\"task\" \r\n                    defVal={task.task}\r\n                />\r\n                <Input formData={formData}\r\n                    setFormData={setFormData} \r\n                    name=\"description\"  \r\n                    defVal={task.description}\r\n                />\r\n            </div>\r\n            <SaveButton/>\r\n        </form>\r\n\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport EditButton from './buttons/EditButton'\r\nimport DeleteForm from './forms/DeleteForm'\r\nimport EditForm from './forms/EditForm'\r\n\r\n\r\nexport default function TaskCard({task, setCloseAll,closeAll }) {\r\n    const [visible, setVisible] = useState(false)\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(closeAll){\r\n            setEdit(false)\r\n            setCloseAll(false)\r\n        }\r\n    },[edit, setCloseAll, closeAll])\r\n\r\n    const handleOnClick = () =>{\r\n        setVisible(!visible)\r\n    }  \r\n\r\n    const showEdit = () =>{\r\n        setEdit(!edit)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!edit?\r\n                <div className=\"task-card\" >\r\n                    <h1 onClick={handleOnClick}>{task.task}</h1>\r\n                    {visible && \r\n                        <div className={\"task-card-content\"}>\r\n                            <p>{task.description}</p>\r\n                            <p>{task.date}</p>\r\n                            <div onClick={showEdit}>\r\n                        </div>\r\n                        <div className=\"taskCard-bottom\">\r\n                            <EditButton onClick={showEdit} setEdit={setEdit}/>\r\n                            <DeleteForm task={task} setCloseAll={setCloseAll}/>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                :<EditForm \r\n                    fetch=\"edit\" \r\n                    edit={edit} task={task} setEdit={setEdit}\r\n                    />\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport FetchKit from '../../utils/fetchKit'\r\nimport Button from '../buttons/Button'\r\nimport Input from '../Input'\r\nimport { UserContext } from '../../contexts/userContext'\r\n\r\n\r\nexport default function CreateForm() {\r\n    const {getUserData} = useContext(UserContext)\r\n    \r\n\r\n    const [formData, setFormData] = useState({\r\n        userName: \"\", \r\n        password: \"\"\r\n    })\r\n\r\n    const createOnSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        const newTask = await FetchKit.createTasksFetch(formData)\r\n        if(newTask.ok) getUserData()\r\n    }\r\n    \r\n    return (\r\n        <form className=\"inputForm\" onSubmit={createOnSubmit}>\r\n            <Input \r\n                formData={formData} \r\n                setFormData={setFormData} \r\n                name=\"task\" \r\n                placeHolder={\"start typing...\"}\r\n            />\r\n\r\n            <Input \r\n                formData={formData} \r\n                setFormData={setFormData} \r\n                name=\"description\" \r\n                placeHolder={\"description\"}\r\n                type=\"text\"\r\n            />\r\n\r\n            <Button text={\"add\"}/>\r\n        </form>\r\n    )\r\n}\r\n","import React, {useEffect, useState, useContext} from 'react'\r\nimport {Puff} from 'react-loading-icons'\r\nimport Header from '../components/Header'\r\nimport TaskCard from '../components/TaskCard'\r\nimport CreateForm from '../components/forms/CreateForm'\r\nimport { UserContext } from '../contexts/userContext'\r\n\r\nexport default function HomePage() {\r\n    const {getUserData, user} = useContext(UserContext)\r\n    const [closeAll, setCloseAll] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        !user&&getUserData()\r\n\r\n    }, [user, closeAll, getUserData])\r\n\r\n    return (\r\n        <>\r\n            {!user ? <Puff stroke=\"#000000\" className=\"loading\" />: \r\n            (<>\r\n                <Header user={user}/>\r\n                <CreateForm fetch=\"create\"/>\r\n                <div className=\"hompage-content\">\r\n                    {user.tasks.map((task, key) =>{\r\n                        return <TaskCard  \r\n                                    task={task} \r\n                                    key={key} \r\n                                    setCloseAll={setCloseAll} \r\n                                    closeAll={closeAll}\r\n                                />\r\n                    })}\r\n                </div>\r\n            </>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router'\r\nimport {Redirect } from 'react-router-dom'\r\n\r\nimport decode from 'jwt-decode' \r\n\r\n\r\nexport default function ProtectedRoute(component) {\r\n    const token = localStorage.getItem(\"token\")\r\n\r\n    const validateToken = () => {\r\n            try{\r\n                const verified = decode(token)\r\n                if(verified){\r\n                    return true\r\n                }\r\n            } \r\n            catch (e){\r\n                localStorage.clear()\r\n                return false   \r\n            }\r\n    }   \r\n\r\n    return (\r\n        <>\r\n            {validateToken()?\r\n            <Route {...component} /> \r\n            :\r\n            <Redirect to={{pathname: \"/\"}}/> \r\n            }          \r\n        </>\r\n        )\r\n\r\n}\r\n","import './App.scss';\r\nimport React, {useState} from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport LoginPage from './pages/LoginPage'\r\nimport { UserContext } from './contexts/userContext';\r\nimport HomePage from './pages/HomePage';\r\nimport FetchKit from './utils/fetchKit'\r\nimport ProtectedRoute from './pages/ProtectedRoute'\r\n\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState()\r\n\r\n\r\n  const getUserData = async () =>{\r\n    const res = await FetchKit.getUserFetch()\r\n    const data = await res.json()\r\n    setUser(data) \r\n  }\r\n\r\n\r\n  return (\r\n    <UserContext.Provider value={\r\n      {\r\n        user, setUser, getUserData\r\n      }\r\n    }>\r\n      <Switch>\r\n        <ProtectedRoute path=\"/home\" component={HomePage}/>\r\n        <Route exact path=\"/\" component={LoginPage}/>\r\n      </Switch>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}